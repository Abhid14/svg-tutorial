---
import { ViewTransitions } from "astro:transitions";

import { Image } from "astro:assets";
import gorillas from "../assets/Gorillas.jpeg";

import Arrow from "../components/Arrow.astro";
import Decoration from "../components/Decoration.astro";
import Tree from "../components/Tree.astro";
import Gingerbread from "../components/Gingerbread.astro";
import House from "../components/House.astro";
import DecorationWithClip from "../components/DecorationWithClip.astro";
import Star from "../components/Star.astro";
import Snowflake from "../components/Snowflake.astro";
import Forest from "../components/Forest.astro";
import DecorationWithGradient from "../components/DecorationWithGradient.astro";
import Snowman from "../components/Snowman.astro";
import ThreeWithCurves from "../components/ThreeWithCurves.astro";
import Gift from "../components/Gift.astro";
import Bell from "../components/Bell.astro";
import Candy from "../components/Candy.astro";
import Ribbon from "../components/Ribbon.astro";
import Bear from "../components/Bear.astro";
import Text from "../components/Text.astro";
import Sled from "../components/Sled.astro";
import RingingBell from "../components/RingingBell.astro";
import Snowing from "../components/Snowing.astro";
import Background from "../components/Background.astro";
import Clock from "../components/Clock.astro";
import Lights from "../components/Lights.astro";
import Diagram from "../components/Diagram.astro";
import SnowGlobe from "../components/SnowGlobe.astro";

const componentNamesObject = {
  Arrow,
  Decoration,
  Tree,
  Gingerbread,
  House,
  DecorationWithClip,
  Star,
  Snowflake,
  Forest,
  DecorationWithGradient,
  Snowman,
  ThreeWithCurves,
  Gift,
  Bell,
  Candy,
  Ribbon,
  Bear,
  Text,
  Sled,
  RingingBell,
  Snowing,
  Background,
  Clock,
  Lights,
  Diagram,
  SnowGlobe,
};

export interface Props {
  id: string;
  day: number;
  title: string;
  component: string;
  description: string;
  previous?: {
    title: string;
    link: string;
  };
  next?: {
    title: string;
    link: string;
  };
}

const { id, day, title, component, description, previous, next } =
  Astro.props as Props;

const longTitle = `Day ${day}: ${title}`;
const Component = componentNamesObject[component];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${longTitle} - SVG Tutorial`}</title>
    <meta property="og:locale" content="en_US" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="og:title" content={`${longTitle} - SVG Tutorial`} />
    <meta name="twitter:title" content={`${longTitle} - SVG Tutorial`} />
    <meta property="og:description" content={description} />
    <meta name="twitter:description" content={description} />
    <meta property="og:site_name" content="SVG Tutorial" />
    <meta name="twitter:site" content="@HunorBorbely" />
    <meta name="twitter:creator" content="@HunorBorbely" />

    <meta property="og:image" content={`https://svg-tutorial.com/${id}.png`} />
    <meta name="twitter:image" content={`https://svg-tutorial.com/${id}.png`} />
    <meta property="og:url" content="svg-tutorial.com" />
    <script>
      import { webVitals } from "../lib/vitals";
      import { inject } from "@vercel/analytics";

      let analyticsId = import.meta.env.PUBLIC_VERCEL_ANALYTICS_ID;

      if (analyticsId) {
        webVitals({
          path: location.pathname,
          params: location.search,
          analyticsId,
        });
      }
      inject();
    </script>
  </head>

  <body>
    <div class="detail-screen">
      <a href=`/` class="close"></a>
      <div class="image-for-big-screen">
        <Component size="1" />
      </div>

      <div class="details">
        <h1>{longTitle}</h1>
        <div class="image-for-small-screen">
          <Component size="1" />
        </div>
        <slot />
        <div class="image-for-small-screen">
          <Component size="1" />
        </div>

        <div class="center">
          <a
            class="twitter-share-button"
            href={`https://twitter.com/intent/tweet?text=I just learned ${title} by @HunorBorbely: https://svg-tutorial.com/svg/${id}`}
            target="_blank"
            rel="noopener"
          >
            Share this Article</a
          >
        </div>

        <nav>
          {
            next && (
              <a href={`/svg/${next.link}`}>
                <div>
                  <div>Next</div>
                  <div>{next.title}</div>
                </div>
                <svg width="32" height="32" viewBox="0 0 32 32">
                  <path
                    d="M2 16 L 30 16 L 20 6 M 30 16 L 20 26"
                    fill="none"
                    stroke="#333333"
                    stroke-width="4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </a>
            )
          }
        </nav>

        {
          !next && (
            <div class="end">
              <h3>Congratulations!</h3>
              <p>You reached the end of this tutorial series.</p>
              <p>
                <a
                  href={`https://twitter.com/intent/tweet?text=I just learned how code code SVGs by @HunorBorbely: https://svg-tutorial.com/`}
                  target="_blank"
                  rel="noopener"
                >
                  Share this site
                </a>{" "}
                if you liked it and follow me{" "}
                <a href="https://twitter.com/@HunorBorbely">@HunorBorbely</a>
                for more.
              </p>
              <p>
                Also, check out my
                <a href="https://www.youtube.com/@HunorMartonBorbely">
                  YouTube Channel
                </a>
                where in the next video we are going to cover how to recreate
                the class game Gorillas with JavaScript and HTML Canvas.
              </p>
              <Image
                src={gorillas}
                alt="Up Next on YouTube"
                width={550}
                quality={100}
              />
            </div>
          )
        }
      </div>
    </div>
    <style is:global>
      @import url("https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap");
      @import url("https://fonts.googleapis.com/css2?family=Lato&display=swap");

      html,
      body {
        height: 100%;
      }

      body {
        background-color: #151515;
        margin: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;

        display: flex;
        justify-content: center;
        align-items: center;
      }

      .detail-screen {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: white;
        z-index: 100;
        display: grid;
        justify-content: center;
      }

      @media (min-width: 900px) {
        .detail-screen {
          grid-template-columns: 1.2fr minmax(500px, 2fr);
        }
      }

      .details {
        padding: 40px;
        overflow: scroll;
        color: black;
      }

      .details p,
      .details h1,
      .columns,
      .details div:not(.code-flex) {
        max-width: 550px;
      }

      @media (min-width: 1200px) {
        .detail-screen {
          width: 1200px;
          height: calc(100% - 30px);
          border-radius: 10px;
        }
        .details {
          border-top-right-radius: 10px;
          border-bottom-right-radius: 10px;
        }
      }

      .image-for-big-screen {
        display: flex;
        justify-content: center;
        padding: 50px 0 50px 0;
      }

      @media (max-width: 899px) {
        .image-for-big-screen {
          display: none;
        }
      }

      .image-for-small-screen {
        display: flex;
        justify-content: center;
      }

      @media (min-width: 900px) {
        .image-for-small-screen {
          display: none;
        }
      }

      .close {
        position: absolute;
        top: 30px;
        right: 30px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: gray;
        cursor: pointer;

        background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 100 100'><path d='M 30 30 L 70 70 M 30 70 L 70 30' stroke='white' stroke-width='10' /></svg>");
      }

      p {
        line-height: 1.3em;
        font-family: "Lato", sans-serif;
      }

      h3 {
        margin-top: 2.5em;
      }

      ul {
        max-width: 510px;
      }

      ul * {
        margin-bottom: 0.7em;
      }

      code {
        padding: 0 5px 2px;
        background-color: lightgray;
      }

      pre {
        color: white;
        background-color: #333333;
        padding: 2em;
        border-radius: 5px;
        overflow: scroll;
        max-width: 100%;
      }

      pre code {
        background-color: inherit;
        padding: 0;
      }

      .grid-200 {
        display: grid;
        grid-template-columns: 202px 1fr;
        align-items: center;
        justify-content: center;
        column-gap: 10px;
        padding: 10px 0;
      }

      @media (max-width: 599px) {
        .grid-200 {
          display: flex;
          flex-direction: column;
        }
        .grid-200 pre {
          min-width: 250px;
          max-width: 100%;
        }
      }

      .grid-200 svg,
      .grid-200-2 svg {
        border: 1px dashed gray;
      }

      .grid-200-2 {
        display: grid;
        grid-template-columns: 202px 1fr;
        grid-template-rows: auto auto;
        align-items: center;
        justify-content: center;
        column-gap: 10px;
        padding: 10px 0;
      }

      .grid-200-2 *:nth-child(1) {
        grid-row: 1/3;
      }

      .grid-200-2 *:nth-child(3) {
        grid-column: 2;
      }

      @media (max-width: 599px) {
        .grid-200-2 {
          display: flex;
          flex-direction: column;
          justify-items: center;
        }
        .grid-200-2 pre {
          min-width: 250px;
          max-width: 100%;
        }
      }

      .center {
        display: flex;
        justify-content: center;
      }

      @media (max-width: 500px) {
        .code-flex {
          display: flex;
          align-items: center;
          flex-direction: column;
        }

        .code-flex pre {
          width: 100%;
        }
      }

      .twitter-share-button {
        text-decoration: none;
        padding: 20px;
      }

      nav {
        display: flex;
        justify-content: space-between;
        margin-top: 50px;
      }

      nav a {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: 20px;
        text-decoration: none;
        width: 100%;
      }

      nav a {
        border-right: 4px solid lightgray;
        padding: 20px 20px 20px 20px;
        text-align: right;
      }

      .twitter-share-button:hover,
      nav a:hover {
        text-decoration: underline;
      }

      nav a > div {
        line-height: 1.8em;
      }

      nav a > div > div:nth-child(2) {
        font-weight: bold;
        text-wrap: balance;
      }

      .end {
        padding: 40px 0;
        border-top: 4px solid lightgray;
      }

      .end a {
        text-decoration: none;
      }
    </style>
  </body>
</html>
