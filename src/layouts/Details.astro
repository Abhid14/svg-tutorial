---
import { ViewTransitions } from "astro:transitions";

import Decoration from "../components/Decoration.astro";
import Tree from "../components/Tree.astro";
import Gingerbread from "../components/Gingerbread.astro";
import House from "../components/House.astro";
import DecorationWithClip from "../components/DecorationWithClip.astro";
import Star from "../components/Star.astro";
import Snowflake from "../components/Snowflake.astro";
import Forest from "../components/Forest.astro";
import DecorationWithGradient from "../components/DecorationWithGradient.astro";
import Snowman from "../components/Snowman.astro";
import ThreeWithCurves from "../components/ThreeWithCurves.astro";
import Gift from "../components/Gift.astro";
import Bell from "../components/Bell.astro";
import Candy from "../components/Candy.astro";
import Ribbon from "../components/Ribbon.astro";
import Bear from "../components/Bear.astro";
import Text from "../components/Text.astro";
import Sled from "../components/Sled.astro";
import RingingBell from "../components/RingingBell.astro";
import Snowing from "../components/Snowing.astro";
import Background from "../components/Background.astro";
import Clock from "../components/Clock.astro";
import Lights from "../components/Lights.astro";
import Diagram from "../components/Diagram.astro";
import SnowGlobe from "../components/SnowGlobe.astro";

const componentNamesObject = {
  Decoration,
  Tree,
  Gingerbread,
  House,
  DecorationWithClip,
  Star,
  Snowflake,
  Forest,
  DecorationWithGradient,
  Snowman,
  ThreeWithCurves,
  Gift,
  Bell,
  Candy,
  Ribbon,
  Bear,
  Text,
  Sled,
  RingingBell,
  Snowing,
  Background,
  Clock,
  Lights,
  Diagram,
  SnowGlobe,
};

export interface Props {
  title: string;
  component: string;
}

const { title, component } = Astro.props as Props;
const Component = componentNamesObject[component];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${title} - SVG Tutorial`}</title>
    <meta property="og:locale" content="en_US" />
    <meta property="og:title" content={`${title} - SVG Tutorial`} />
    <meta
      property="og:description"
      content="Explore the fundamentals of Scalable Vector Graphics (SVG). Learn how to create and manipulate SVG images with JavaScript, animatie them with CSS. Or turn things around and generate graphics from code."
    />
    <meta property="og:site_name" content="SVG Tutorial" />

    <meta property="og:image" content="https://svg-tutorial.com/image.png" />
    <meta property="og:url" content="svg-tutorial.com" />
    <script>
      import { webVitals } from "../lib/vitals";
      import { inject } from "@vercel/analytics";

      let analyticsId = import.meta.env.PUBLIC_VERCEL_ANALYTICS_ID;

      if (analyticsId) {
        webVitals({
          path: location.pathname,
          params: location.search,
          analyticsId,
        });
      }
      inject();
    </script>
  </head>
  <body>
    <div class="detail-screen">
      <a href=`/` class="close"></a>
      <div class="content">
        <Component size="1" />
      </div>

      <div class="details">
        <h1>{title}</h1>
        <slot />
      </div>
    </div>
    <style is:global>
      @import url("https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap");
      @import url("https://fonts.googleapis.com/css2?family=Lato&display=swap");

      html,
      body {
        height: 100%;
      }

      body {
        background-color: #151515;
        margin: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;

        display: flex;
        justify-content: center;
        align-items: center;
      }

      .detail-screen {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: white;
        z-index: 100;
        display: grid;
        grid-template-columns: auto auto;
      }

      .details {
        padding: 40px;
        overflow: scroll;
        color: black;
      }

      .details p,
      .columns,
      .details div {
        max-width: 550px;
      }

      p {
        line-height: 1.3em;
      }

      h3 {
        margin-top: 2.5em;
      }

      ul {
        max-width: 510px;
      }

      ul * {
        margin-bottom: 0.7em;
      }

      @media (min-width: 770px) {
        .detail-screen {
          grid-template-columns: minmax(400px, auto) auto;
        }
      }

      @media (min-width: 1200px) {
        .detail-screen {
          width: 1200px;
          height: calc(100% - 30px);
          border-radius: 10px;
        }
        .details {
          border-top-right-radius: 10px;
          border-bottom-right-radius: 10px;
        }
      }

      .content {
        display: flex;
        justify-content: center;
        padding: 50px;
      }

      @media (min-width: 770px) {
        .content {
          padding: 50px 0 50px 0;
        }
      }

      .close {
        position: absolute;
        top: 30px;
        right: 30px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: gray;
        cursor: pointer;

        background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 100 100'><path d='M 30 30 L 70 70 M 30 70 L 70 30' stroke='white' stroke-width='10' /></svg>");
      }

      p {
        font-family: "Lato", sans-serif;
      }
      code {
        padding: 0 5px 2px;
        background-color: lightgray;
      }

      pre {
        color: white;
        background-color: #333333;
        padding: 2em;
        border-radius: 5px;
        overflow: scroll;
      }

      pre code {
        background-color: inherit;
        padding: 0;
      }

      .grid-200 {
        display: grid;
        grid-template-columns: 202px 1fr;
        align-items: center;
        justify-content: center;
        column-gap: 10px;
        padding: 10px 0;
      }

      .grid-200 svg,
      .grid-200-2 svg {
        border: 1px dashed gray;
      }

      .grid-200-2 {
        display: grid;
        grid-template-columns: 202px 1fr;
        grid-template-rows: auto auto;
        align-items: center;
        justify-content: center;
        column-gap: 10px;
        padding: 10px 0;
      }

      .grid-200-2 *:nth-child(1) {
        grid-row: 1/3;
      }

      .grid-200-2 *:nth-child(3) {
        grid-column: 2;
      }
    </style>
  </body>
</html>
